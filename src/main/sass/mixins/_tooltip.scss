// determine tooltip offset direction
@function nc-get-tooltip-offset-direction($pos) {
  $offset: 'top';
  @if ($pos == 'top' or $pos == 'bottom') {
    $offset: 'left';
  }
  @return $offset;
}

// calculate tooltip offset
@function nc-get-tooltip-offset($pos, $size) {
  $val: -($size / 2);
  @if ($pos == 'left') {
    $val: 0;
  }
  @return $val;
}


@mixin nc-tooltip-position($pos) {
  margin-#{$pos}: $nc-tooltip-caret;

  @include nc-breakpoint($nc-bp-md) {
    margin-#{$pos}: $nc-tooltip-caret-lg;
  }

  &::after {
    $direction: nc-get-tooltip-offset-direction($pos);

    // reset positioning attributes first
    top: auto;
    right: auto;
    bottom: auto;
    left: auto;

    #{$pos}: nc-get-tooltip-offset($pos, $nc-tooltip-caret);

    #{$direction}: 50%;

    margin-#{$direction}: -($nc-tooltip-caret / 2);

    @include nc-breakpoint($nc-bp-md) {
      #{$pos}: nc-get-tooltip-offset($pos, $nc-tooltip-caret-lg);

      margin-#{$direction}: -($nc-tooltip-caret-lg / 2);
    }

    // IE doesn't understand CSS filter, so we need to add border to visually
    // distinguish the caret
    @include nc-target-ie() {
      @include nc-tooltip-caret-legacy($pos);
    }
  }
}


// for IE because it doesn't understand CSS filter
@mixin nc-tooltip-caret-legacy($pos) {
  // reset border first
  border: 0;

  $caret-border-style: 2px solid nc-theme('caret-legacy-color');

  @if ($pos == 'bottom') {
    border-right: $caret-border-style;
    border-bottom: $caret-border-style;
  }
  @else if ($pos == 'right') {
    border-top: $caret-border-style;
    border-right: $caret-border-style;
  }
  @else if ($pos == 'left') {
    border-bottom: $caret-border-style;
    border-left: $caret-border-style;
  }
  @else {
    border-top: 1px solid nc-theme('caret-legacy-color');
    border-left: 1px solid nc-theme('caret-legacy-color');
  }
}



// ************************************************************************** //
// The following are deprecated and will be removed in Nucleus 2.0
// ************************************************************************** //
// determine tooltip offset direction
@function get-tooltip-offset-direction($pos) {
  @warn nc-deprecate('get-tooltip-offset-direction', 'function', 'Use `nc-get-tooltip-offset-direction` instead.');

  $offset: 'top';
  @if ($pos == 'top' or $pos == 'bottom') {
    $offset: 'left';
  }
  @return $offset;
}

// calculate tooltip offset
@function get-tooltip-offset($pos, $size) {
  @warn nc-deprecate('get-tooltip-offset', 'function', 'Use `nc-get-tooltip-offset` instead.');

  $val: -($size / 2);
  @if ($pos == 'left') {
    $val: 0;
  }
  @return $val;
}

@mixin tooltip-caret-legacy($pos) {
  @warn nc-deprecate('tooltip-caret-legacy', 'mixin', 'Use `nc-tooltip-caret-legacy()` instead.');

  @include nc-tooltip-caret-legacy($pos);
}
