// scss-lint:disable VariableForProperty
// Disable linter because we're passing in the color as a variable, so we need
// to call the get-darker/lighter functions dynamically instead of with set vars

// mixin to create buttons
@mixin btn($color: $brand-primary, $txtcolor: $white, $hoverstate: false, $outlined: false) {
  @include btn-base();

  @if not $outlined {
    @include btn-color($color, $txtcolor, $hoverstate: $hoverstate);
  }
  @else {
    @include btn-outlined($color, $hoverstate: $hoverstate);
  }
}

// shared base for buttons
@mixin btn-base() {
  @include responsive-font('lg', 1);

  min-height: $button-height;
  padding: 0 $button-padding;
  font-weight: normal;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
  border-radius: $button-border-radius;
  box-shadow: none;

  @include breakpoint($bp-md) {
    min-height: $button-height-lg;
    padding: 0 $button-padding-lg;
  }
}

// set the button color
@mixin btn-color($bgcolor, $txtcolor, $hoverstate: false) {
  color: $txtcolor;
  background-color: $bgcolor;
  border: 0;

  @if $hoverstate {
    &:active,
    &:focus,
    &:hover {
      background-color: get-darker($bgcolor);
    }
  }

  &[disabled] {
    @include btn-disabled($bgcolor);
  }
}

// set the outlined color
@mixin btn-outlined($color, $hoverstate: false) {
  color: $color;
  background-color: $white;
  border: 1px solid $color;

  @if $hoverstate {
    &:active,
    &:focus,
    &:hover {
      color: get-darker($color);
      border-color: get-darker($color);
    }
  }

  &[disabled] {
    @include btn-disabled($color, $outlined: true);
  }
}

// set disabled color
@mixin btn-disabled($color, $outlined: false) {
  @if not $outlined {
    background-color: get-lighter($color);
  }
  @else {
    color: get-lighter($color);
    border-color: get-lighter($color);
  }
}

// unstyled button
@mixin unbutton($txtcolor: $brand-primary, $padding: $button-padding) {
  padding: 0 $padding;
  font-weight: normal;
  color: $txtcolor;
  text-align: center;
  white-space: nowrap;
  background-color: $transparent-color;
  border: 0;
  border-radius: 0;
  box-shadow: none;

  &:hover {
    text-decoration: underline;
  }
}
