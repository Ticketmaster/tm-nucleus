// calculate different shades
@function get-darker($color, $percent: 25%) {
  @return mix($black, $color, $percent);
}

@function get-lighter($color, $percent: 75%) {
  @return mix($white, $color, $percent);
}

// return hex value associated with name
@function color($name, $shade) {
  @return map-get(map-get($palette, $name), $shade);
}

// responsive spacing based on established ratio
@function increase-spacing($val) {
  @return $val * $spacing-ratio;
}

// there should an overlay z-index and an overlay-content z-index
@function z($level) {
  @return map-get($z-indexes, $level);
}

// turn unit values into unitless
@function strip-units($num) {
  @return $num / ($num * 0 + 1);
}

// convert px to em
@function em($px, $context: $default-font-size) {
  @if ($px == 0) { @return 0; }
  @return $px / $context * 1em;
}

// determine tooltip offset direction
@function get-tooltip-offset-direction($pos) {
  @if ($pos == 'top' or $pos == 'bottom') {
    $offset: 'left';
  }
  @else {
    $offset: 'top';
  }
  @return $offset;
}

// calculate tooltip offset
@function get-tooltip-offset($pos, $size) {
  @if ($pos == 'left') {
    $val: 0;
  }
  @else {
    $val: -($size / 2);
  }
  @return $val;
}
